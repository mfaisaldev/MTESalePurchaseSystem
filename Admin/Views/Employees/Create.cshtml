@model Admin.Models.Employee
@using Admin.Helpers;
@{
    MenuItem mi = new MenuItem();
    if (Model.EmployeeId == Guid.Empty)
    {
        ViewData["Title"] = "Employee - Create";
        mi.Name = "Employees Create";
    }
    else
    {
        ViewData["Title"] = "Employee - Edit";
        mi.Name = "Employees Edit";
    }
    ViewData["Active"] = "Employee";
    mi.URL = "Create";
    mi.UserIdentity = User.Identity.Name;
    HtmlHelpers.topMenuListAdd(mi);
    Account a = new Account();
    List<Admin.Models.Menu> mlist = a.AccessMenu(User.Identity.Name);
    ViewData["mlist"] = mlist;
}
@if (mlist.Where(u => u.MenuId.ToString().ToUpper() == Utilities.Menu_Employee).FirstOrDefault() != null)
{

    using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { @class = "form-horizontal form-seperated form-row-stripped", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        <div class="text-danger">@ViewBag.Error</div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FamilyName, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FamilyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FamilyName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Address3, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Address3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address3, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PostOffice, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PostOffice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostOffice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.CountryId, new SelectList(Model.Country, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
              </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.InternalTelephone, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.InternalTelephone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InternalTelephone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MobileTelephone, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MobileTelephone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobileTelephone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BankAccount, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PostAccount, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PostAccount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostAccount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeNo, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmployeeNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmployeeNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                      <div class="radio">
                            @foreach (var item in Model.Gender)
                    {
                        if (Model.EmployeeId == Guid.Empty && item.Value == "0")
                        {
                                    @Html.RadioButtonFor(m => m.Sex, item.Value, new { @class = "form-control", @checked = "checked" });
                        }
                        else
                        {
                                    @Html.RadioButtonFor(m => m.Sex, item.Value, new { @class = "form-control" });
                        }
                                @:
                                @item.Text;
                                @:
                    }
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Image", new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @if (Model.EmployeeId != Guid.Empty)
                    {
                        if (ViewBag.FileId != null)
                        {
                                <img src="~/File/Index/@ViewBag.FileId" height="100" width="100" alt="Image" />
                            }
                        }
                        <input type="file" id="Avatar" name="upload" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        <div class="radio">
                            @foreach (var item in Model.Status)
                    {
                        if (Model.EmployeeId == Guid.Empty && item.Value == Utilities.Status_InActive)
                        {
                                    @Html.RadioButtonFor(m => m.myStatus, item.Value, new { @class = "form-control", @checked = "checked" });
                        }
                        else
                        {
                                    @Html.RadioButtonFor(m => m.myStatus, item.Value, new { @class = "form-control" });
                        }
                                @:
                                @item.Text;
                                @:
                    }
                        </div>
                    </div>
                </div>
                </div>
            </div>
        @Html.HiddenFor(model => model.EmployeeId)
        @Html.HiddenFor(model => model.FileId)
        <div class="form-actions text-right pal">
            @if (Model.EmployeeId == Guid.Empty)
            {
                <input type="submit" value="Create Employee" name="action" class="btn btn-primary" />
            }
            else
            {
                <input type="submit" value="Edit Employee" name="action" class="btn btn-primary" />
                @:
                <input type="submit" value="Delete Employee" name="action" onclick="return confirm('Are you sure to delete this record ?')" class="btn btn-danger" />

            }
            @Html.ActionLink("Back to List", "Index", "Employees", null, new { @class = "btn btn-green" })

        </div>
    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



