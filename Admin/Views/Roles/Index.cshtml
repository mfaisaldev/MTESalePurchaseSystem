@using Admin.Helpers;
@model IEnumerable<Admin.Models.Role>

@{
    ViewData["Title"] = "Role";
    ViewData["Active"] = "Role";

    MenuItem mi = new MenuItem();
    mi.URL = "Index";
    mi.Name = "Roles List";
    mi.UserIdentity = User.Identity.Name;
    HtmlHelpers.topMenuList.Clear();
    HtmlHelpers.topMenuListAdd(mi);
    //Access Control
    List<Admin.Models.Menu> mlist = new Account().AccessMenu(User.Identity.Name);
    ViewData["mlist"] = mlist;
}
@if (mlist.Where(u => u.MenuId.ToString().ToUpper() == Utilities.Menu_Role ).FirstOrDefault() != null)
{
<div class="panel-body pan">
    <div class="portlet box">
        <div class="portlet-body">
            <div class="row mbm">
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <table id="table_id"
                               class="table table-hover table-striped table-bordered table-advanced tablesorter display">
                            <thead>
                                <tr>
                                    <th width="30%">@Html.DisplayNameFor(model => model.Name)</th>
                                    <th width="50%">@Html.DisplayNameFor(model => model.Description)</th>
                                    <th width="10%">@Html.DisplayNameFor(model => model.Status)</th>
                                    <th width="10%">Actions</th>
                                </tr>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>
                                            @if (item.StatusId.ToString() == Utilities.Status_Active)
                                            {
                                                <span class="label label-sm label-success">@Html.DisplayFor(modelItem => item.myStatus)</span>
                                            }
                                            else
                                            {
                                                <span class="label label-sm label-danger">@Html.DisplayFor(modelItem => item.myStatus)</span>
                                            }
                                        </td>
                                        <td>
                                            <a href="@Url.Action("Create", new { Id = item.RoleId })">
                                                <button type="button" class="btn btn-default btn-xs">
                                                    <i class="fa fa-edit"></i>&nbsp;
                                                    Edit
                                                </button>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}
@section Scripts {
    @{Html.RenderPartial("_TableScripts");}
}
