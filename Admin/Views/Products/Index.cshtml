@using Admin.Helpers;
@using PagedList.Mvc;
@model PagedList.IPagedList<Admin.DBLayer.tblProduct>
@{
    ViewData["Title"] = "Product - List";
    ViewData["Active"] = "Product";
    MenuItem mi = new MenuItem();
    mi.URL = "Index";
    mi.Name = ViewData["Title"].ToString();
    mi.UserIdentity = User.Identity.Name;
    HtmlHelpers.topMenuList.Clear();
    HtmlHelpers.topMenuListAdd(mi);
    Account a = new Account();
    List<Admin.Models.Menu> mlist = a.AccessMenu(User.Identity.Name);
    ViewData["mlist"] = mlist;
}
@if (mlist.Where(u => u.MenuId.ToString().ToUpper() == Utilities.Menu_Product).FirstOrDefault() != null)
{
    <div class="panel-body pan">
        <div class="portlet box">
            <div class="portlet-header">
                <a href="Create">
                    <button type="button" class="btn btn-info">
                        Create New
                    </button>
                </a>
                &nbsp;
                <a href="MultiProductAdd">
                    <button type="button" class="btn btn-info">
                        Add Multiple Product
                    </button>
                </a>
            </div>
            <div class="portlet-body">
                <div class="row mbm">
                    <div class="col-lg-12">
                        <div class="table-responsive">
                            @using (Html.BeginForm("Index", "products", FormMethod.Get))
                            {
                            <p>
                                Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                                <input type="submit" value="Search" class="btn btn-success"/>
                            </p>
                            }
                            <table id="table_id"
                                   class="table table-hover table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th width="15%">Image</th>
                                        <th width="20%">@Html.ActionLink("UCP Code", "Index", new { sortOrder = ViewBag.UPCCodeSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                                        <th width="20%">@Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                                        <th width="15%">@Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                                        <th width="10%">@Html.ActionLink("Stock", "Index", new { sortOrder = ViewBag.StockSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                                        <th width="10%">@Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                                        <th width="10%">Actions</th>
                                    </tr>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @if (item.FileId != null)
                                                {
                                                    <img src="~/File/Index/@item.FileId" height="50" width="50" alt="Image" />
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.UPC_code)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Price)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ProductStock)
                                            </td>
                                            <td>
                                                @if (item.StatusId.ToString() == Utilities.Status_Active)
                                                {
                                                    <span class="label label-sm label-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="label label-sm label-danger">In-Active</span>
                                                }
                                            </td>
                                            <td>
                                                <a href="@Url.Action("Create", new { Id = item.ProductId })">
                                                    <button type="button" class="btn btn-default btn-xs">
                                                        <i class="fa fa-edit"></i>&nbsp;
                                                        Edit
                                                    </button>
                                                </a>
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                                </thead>
                            </table>
                            <br />
                            
                            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                            @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

